# -*- coding: utf-8 -*-
"""AB_testing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-1cqs0V9-fhgf_Exh7OWC3qED_8ngNzj

# A/B Testing on Marketing Campaigns
"""

# Mounting Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Setting the current working directory
import os
os.chdir('/content/drive/My Drive/')

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
sns.set()

df=pd.read_csv('campaigns.csv')
df.head(10)

print(f'Rows            : {df.shape[0]}')
print(f'Columns         : {df.shape[1]}')
print(f'Features        : {df.columns.tolist()}')
print(f'Missing Values  : {df.isnull().values.sum()}')
print(f'Unique Values   : \n\n{df.nunique()}')

df.describe()

"""# EDA and Visualizations"""

# Create some plots to visual our sales and marketing data
# Using fivethirtyeight style on matplotlib

plt.style.use('fivethirtyeight')
ax = df.groupby('Campaigns').sum()['SalesInThousands'].plot.pie(figsize=(8,8),
                                                                autopct='%1.0f%%',
                                                                explode = (0, 0.1, 0),
                                                                textprops = {'fontsize' : 15})
ax.set_ylabel('')
ax.set_title('Sales Distribution Across the 3 Different Promotions', fontsize = 20)

plt.show()

# Now let's view the promotions for each market size
df.groupby(['Campaigns', 'MarketSize']).count()['OutletID']

# Using unstack
df.groupby(['Campaigns', 'MarketSize']).count()['OutletID'].unstack('MarketSize')

# Put this into a plot
ax = df.groupby(['Campaigns', 'MarketSize']).count()['OutletID'].unstack('MarketSize').plot(
    kind='bar',
    figsize=(10,8),
    grid=True)

ax.tick_params(axis = 'x', labelsize= 15)
plt.xticks(rotation = 'horizontal')
ax.tick_params(axis = 'y', labelsize = 15)
ax.set_ylabel('Count')
ax.set_title('Breakdowns of Market Sizes across Different Campaigns', fontsize = 20)

plt.show()

ax = df.groupby('AgeofOutlets').count()['OutletID'].plot(
    kind='bar',
    figsize=(12,7),
    grid=True)

ax.set_xlabel('Age')
ax.set_ylabel('Count')
ax.set_title('Overall Distributions Outlet Ages')

plt.show()

# Visualize this summary
ax = df.groupby(['AgeofOutlets', 'Campaigns']).count()['OutletID'].unstack('Campaigns').iloc[::-1].plot(
    kind='barh',
    figsize=(14,18),
    grid=True)

ax.set_ylabel('Age')
ax.set_xlabel('Count')
ax.set_title('Overall Distributions of Age of Outlets')

plt.show()

# Every campaigns has similar age profiles and the average outlet ages is around 8 ~ 9 years old
# Majority of the outlet are around 10 ~ 12 years old or younger

df.groupby('Campaigns').describe()['AgeofOutlets']

"""# Performing A/B Testing on Three Marketing Campaigns"""



# Every campaigns has similar age profiles and the average outlet ages is around 8 ~ 9 years old
# Majority of the outlet are around 10 ~ 12 years old or younger

df.groupby('Campaigns').describe()['AgeofOutlets']



# Explicitly select the 'SalesInThousands' column after grouping
means = df.groupby('Campaigns')['SalesInThousands'].mean()
stdev = df.groupby('Campaigns')['SalesInThousands'].std()
obs = df.groupby('Campaigns')['SalesInThousands'].count()
print(f'===== MEAN ====== \n{means}\n')
print(f'===== STANDARD DEVIATION ====== \n{stdev}\n')
print(f'===== OBSERVATIONS ====== \n{obs}\n')

"""# A/B Testing: 1st Campaigns vs 2nd Campaigns"""

# Computing the t and p values using scipy

t, p = stats.ttest_ind(df.loc[df['Campaigns'] == 1, 'SalesInThousands'].values,
                       df.loc[df['Campaigns'] == 2, 'SalesInThousands'].values,
                       equal_var=False)
print(f't-value = {str(t)}')
print(f'p-value = {str(p)}')

"""# Analysis of P and t-values (1 vs 2)

Our p-Value is close to 0 which means that there is good evidence to **reject the null hypothesis**. Meaning the there is a statistical difference between the two groups. Our threshold rejectings the Null is usually less than 0.05.

Furthermore, the t-test shows that the marketing performances for these two groups are significantly different and that first marketing campaigns outperforms second marketing campaigns.

***

# A/B Testing: 1st Campaigns vs 3rd Campaigns

However, if we run a t-test between the promotion group 1 and promotion group 3, we see different results:
"""

t, p = stats.ttest_ind(
    df.loc[df['Campaigns'] == 1, 'SalesInThousands'].values,
    df.loc[df['Campaigns'] == 3, 'SalesInThousands'].values,
    equal_var = False)

print(f't-value = {str(t)}')
print(f'p-value = {str(p)}')

"""# Analysis of P and t-values (1 vs 3)

We note that the average sales from first marketing campaigns (58.1) is higher than those from third marketing campaigns (55.36).
But, running a t-test between these two groups, gives us a t-value of 1.556 and a p-value of 0.121.
The computed **p-value is a lot higher than 0.05**, past the threshold for statistical significance.

***

# A/B Testing: 2nd Campaigns vs 3rd Campaigns
"""

t, p = stats.ttest_ind(
    df.loc[df['Campaigns'] == 2, 'SalesInThousands'].values,
    df.loc[df['Campaigns'] == 3, 'SalesInThousands'].values,
    equal_var = False)

print(f't-value = {str(t)}')
print(f'p-value = {str(p)}')

"""# Analysis of P and t-values (2 vs 3)

Based on the average sales, second marketing campaigns (47.33) is higher than those from third marketing campaigns (55.36).
If we run the t-test and between these two campaigns, results shows that the p-value (0.000001569) is lower than 0.05 threshold, which concludes that it **rejects null hypotheses**. In other words, there's statistical difference between second marketing campaigns and third marketing campaigns.
"""